
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVIDEleftANDORnonassocLPARENRPARENnonassocLACCOLRACCOLnonassocGREATERLESSGREATEREQLESSEQEQEQACCENTCIRCON AND BOOLEAN BREAK CLASS CONCAT CONTINUE DEC DIVEQ DIVIDE DO ELIF ELSE EQ EQEQ ESPERLUETTE EXCLAM EXTENDS FALSE FCT FINLIGNE FLOAT FOR GREATER GREATEREQ ID IF IN INC INT INTERRO LACCOL LCROCHET LESS LESSEQ LET LPAREN MINUS MINUSEQ MULT MULTEQ NOTEQ OR PERCENT PERCENTEQ PIPE PLUS PLUSEQ POINT POW PRINT PRIVATE PUBLIC RACCOL RANGE RCROCHET RETURN RPAREN SCAN STRING TRUE TWOPOINTS TYPEBOOL TYPEFLOAT TYPEINT TYPESTRING VIRGULE VOID WHILE backslashed statements : statements statement\n                   | statement\n    expression : INT \n                | FLOAT\n                | varval\n                | expr_print_id\n                | expr_print\n                | expr_print_exp\n\n        \n    statement : ID EQ expressionfactor : IDfactor : INT \n              | FLOATterm : INT \n            | FLOATexpression : STRINGexpression : BOOLEANexpression : expression PLUS term  \n     expression : ID PLUS term  \n     expression : ID PLUS ID \n     expression : expression MINUS termexpression : ID MINUS term  \n     expression : ID MINUS ID \n     expression : expression MULT termexpression : ID MULT term  \n     expression : ID MULT ID \n     expression : expression DIVIDE termexpression : ID DIVIDE term  \n     expression : ID DIVIDE ID \n     expression : expression PERCENT termexpression : ID PERCENT term  \n     expression : ID PERCENT ID \n     expression : expression POW termexpression : ID POW term  \n     expression : ID POW ID \n     expression : ID EQ CONCAT LPAREN STRING VIRGULE STRING RPAREN\n                  | ID EQ CONCAT LPAREN STRING VIRGULE INT RPAREN\n                  | ID EQ CONCAT LPAREN INT VIRGULE STRING RPAREN\n                  | ID EQ CONCAT LPAREN STRING VIRGULE FLOAT RPAREN\n                  | ID EQ CONCAT LPAREN FLOAT VIRGULE STRING RPAREN\n                  | ID EQ CONCAT LPAREN ID VIRGULE STRING RPAREN\n                  | ID EQ CONCAT LPAREN STRING VIRGULE ID RPAREN\n\n    \n    expression : int_assign\n               | float_assign\n    int_assign : ID EQ INTfloat_assign : ID EQ FLOATexpression : ID EQ STRINGexpression : ID EQ BOOLEANexpression : ID EQ ID\n      statement : compare_statement\n                | compare_ids_statement\n                | compare_idvalue_statement\n                | compare_bool_statement\n                | and_statement\n                | or_statement \n                | and_statement_for_ids\n                | or_statement_for_ids\n                | if_statement\n                | if_else_statement\n                | while_statement\n                | doWhile_statement\n                | for_statement\n                | inc_statement\n                | inc_assign_statement\n                | dec_statement\n                | dec_assign_statement\n                | input_statement\n                | fonction\n                | appel_fonction\n                | return\n                | return_id\n                | fonction_return_id\n                | while_fake_statement\n                | expression\n     expression : ID EQ booleans\n      \n    booleans : compare_statement\n                | compare_ids_statement\n                | compare_idvalue_statement\n                | compare_bool_statement\n                | and_statement\n                | and_statement_for_ids\n                | or_statement_for_ids\n                | or_statement\n                | BOOLEAN\n    expression : TYPEINT IDexpression : TYPEFLOAT IDexpression : TYPEBOOL IDexpression : TYPESTRING IDexpression : TYPEINT ID EQ factorexpression : TYPEFLOAT ID EQ factorexpression : TYPEBOOL ID EQ expressionexpression : TYPESTRING ID EQ expression\n    expr_print_id : PRINT LPAREN ID RPAREN                  \n    expr_print : PRINT LPAREN STRING RPARENexpr_print_exp : PRINT LPAREN expression RPAREN\n     compare_statement : expression EQEQ expression\n                       | expression NOTEQ expression\n                       | expression GREATER expression\n                       | expression GREATEREQ expression\n                       | expression LESS expression\n                       | expression LESSEQ expression\n     \n     compare_ids_statement : ID EQEQ ID\n                       | ID NOTEQ ID\n                       | ID GREATER ID\n                       | ID GREATEREQ ID\n                       | ID LESS ID\n                       | ID LESSEQ ID\n     \n    compare_idvalue_statement : ID EQEQ expression\n                       | ID NOTEQ expression\n                       | ID GREATER expression\n                       | ID GREATEREQ expression\n                       | ID LESS expression\n                       | ID LESSEQ expression\n\n     \n     compare_bool_statement : BOOLEAN EQEQ BOOLEAN\n                       | BOOLEAN NOTEQ BOOLEAN\n\n     \n    and_statement : BOOLEAN AND BOOLEAN\n                  | BOOLEAN AND compare_statement\n                  | compare_statement AND BOOLEAN\n                  | BOOLEAN AND compare_ids_statement\n                  | compare_ids_statement AND BOOLEAN\n                  | BOOLEAN AND compare_idvalue_statement\n                  | compare_idvalue_statement AND BOOLEAN\n                  | BOOLEAN AND compare_bool_statement\n                  | compare_bool_statement AND BOOLEAN\n                  | compare_statement AND compare_statement\n                  | compare_ids_statement AND compare_ids_statement\n                  | compare_idvalue_statement AND compare_idvalue_statement\n                  | compare_idvalue_statement AND compare_ids_statement\n                  | compare_ids_statement AND compare_idvalue_statement\n                  | compare_idvalue_statement AND compare_statement\n                  | compare_statement AND compare_idvalue_statement\n                  | compare_statement AND compare_ids_statement\n                  | compare_ids_statement AND compare_statement\n    \n    and_statement_for_ids : ID AND ID\n    or_statement : BOOLEAN OR BOOLEAN\n                  | BOOLEAN OR compare_statement\n                  | compare_statement OR BOOLEAN\n                  | BOOLEAN OR compare_ids_statement\n                  | compare_ids_statement OR BOOLEAN\n                  | BOOLEAN OR compare_idvalue_statement\n                  | compare_idvalue_statement OR BOOLEAN\n                  | BOOLEAN OR compare_bool_statement\n                  | compare_bool_statement OR BOOLEAN\n                  | compare_statement OR compare_statement\n                  | compare_ids_statement OR compare_ids_statement\n                  | compare_idvalue_statement OR compare_idvalue_statement\n                  | compare_idvalue_statement OR compare_ids_statement\n                  | compare_ids_statement OR compare_idvalue_statement\n                  | compare_idvalue_statement OR compare_statement\n                  | compare_statement OR compare_idvalue_statement\n                  | compare_statement OR compare_ids_statement\n                  | compare_ids_statement OR compare_statement\n    or_statement_for_ids : ID OR ID\n    if_statement : IF LPAREN compare_statement RPAREN LACCOL expression RACCOL\n                 | IF LPAREN compare_statement RPAREN LACCOL statements RACCOL\n                 | IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL\n                 | IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL\n                 | IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL\n                 | IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL\n                 | IF LPAREN and_statement RPAREN LACCOL expression RACCOL\n                 | IF LPAREN or_statement RPAREN LACCOL expression RACCOL\n                 | IF LPAREN and_statement RPAREN LACCOL statements RACCOL\n                 | IF LPAREN or_statement RPAREN LACCOL statements RACCOL \n                 | IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL\n                 | IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL\n                 \n    \n    if_else_statement : IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL\n                      | IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL\n                      | IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE if_statement\n                      | IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE if_statement\n                      | IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement\n                      | IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement\n                      | IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement\n                      | IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE if_else_statement\n                      | IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE if_else_statement\n\n    while_statement : WHILE LPAREN compare_statement RPAREN LACCOL statements RACCOL\n                       | WHILE LPAREN compare_statement RPAREN LACCOL expression RACCOL\n                       | WHILE LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL\n                       | WHILE LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL\n                       | WHILE LPAREN compare_idvalue_statement RPAREN LACCOL statements ID INC RACCOL\n                       | WHILE LPAREN compare_idvalue_statement RPAREN LACCOL expression ID INC RACCOL\n                       | WHILE LPAREN and_statement RPAREN LACCOL statements RACCOL\n                       | WHILE LPAREN and_statement RPAREN LACCOL expression RACCOL\n                       | WHILE LPAREN or_statement RPAREN LACCOL statements RACCOL\n                       | WHILE LPAREN or_statement RPAREN LACCOL expression RACCOL\n                       | WHILE LPAREN BOOLEAN RPAREN LACCOL statements RACCOL\n                       | WHILE LPAREN BOOLEAN RPAREN LACCOL expression RACCOL\n    while_fake_statement : WHILE LPAREN ID LESS INT RPAREN LACCOL statements ID INC RACCOL\n                            | WHILE LPAREN ID LESS INT RPAREN LACCOL expression ID INC RACCOL\n    \n    doWhile_statement : DO LACCOL expression RACCOL WHILE LPAREN compare_statement RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN compare_statement RPAREN\n                      | DO LACCOL expression RACCOL WHILE LPAREN compare_idvalue_statement RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN compare_idvalue_statement RPAREN\n                      | DO LACCOL expression RACCOL WHILE LPAREN compare_ids_statement RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN compare_ids_statement RPAREN\n                      | DO LACCOL expression RACCOL WHILE LPAREN and_statement RPAREN\n                      | DO LACCOL expression RACCOL WHILE LPAREN or_statement RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN and_statement RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN or_statement RPAREN\n                      | DO LACCOL expression RACCOL WHILE LPAREN BOOLEAN RPAREN\n                      | DO LACCOL statements RACCOL WHILE LPAREN BOOLEAN RPAREN\n    \n    inc_statement : ID INC\n\n    inc_assign_statement : ID EQ term INC\n    dec_statement :  ID DEC\n    dec_assign_statement : ID EQ term DEC\n    for_statement : FOR LPAREN ID IN RANGE LPAREN INT RPAREN RPAREN LACCOL expression RACCOL\n                  | FOR LPAREN ID IN RANGE LPAREN INT RPAREN RPAREN LACCOL statements RACCOL\n\n    \n        argument_list : expression\n                      | argument_list VIRGULE expression\n    \n    parameter_list : expression\n                   | parameter_list VIRGULE expression\n    \n    fonction : FCT ID LPAREN parameter_list RPAREN LACCOL statements RACCOL\n         | FCT ID LPAREN RPAREN LACCOL statements RACCOL\n         | FCT ID LPAREN parameter_list RPAREN LACCOL statements return RACCOL\n         | FCT ID LPAREN RPAREN LACCOL statements return RACCOL\n    \n    fonction_return_id : FCT ID LPAREN parameter_list RPAREN LACCOL statements return_id RACCOL\n                   | FCT ID LPAREN RPAREN LACCOL statements return_id RACCOL\n    \n    appel_fonction : ID LPAREN argument_list RPAREN\n               | ID LPAREN  RPAREN\n               | ID LPAREN ID RPAREN\n\n    \n    return : RETURN LPAREN expression RPAREN\n    \n    return_id : RETURN LPAREN ID RPAREN\n    \n        input_statement : TYPEINT ID EQ SCAN LPAREN STRING RPAREN\n                        | TYPEFLOAT ID EQ SCAN LPAREN STRING RPAREN\n                        | TYPESTRING ID EQ SCAN LPAREN STRING RPAREN\n    \n    varval : INT\n            | FLOAT\n            | STRING\n            | BOOLEAN\n    class_variables : class_variables class_variable\n                       | class_variable\n         class_variable : PUBLIC ID EQ varval\n                       | PRIVATE ID EQ varval\n    class_fonctions : class_fonctions class_fonction\n                       | class_fonction\n        class_fonctions_return_id : class_fonctions_return_id class_fonction_return_id\n                       | class_fonction_return_id\n        class_fonction : PUBLIC fonction\n                      | PRIVATE fonction\n    class_fonction_return_id : PUBLIC fonction_return_id\n                                | PRIVATE fonction_return_id\n    statement : CLASS ID LACCOL class_variables RACCOL\n                | CLASS ID EXTENDS ID LACCOL class_variables RACCOL\n                | CLASS ID LACCOL class_variables class_fonctions RACCOL\n                | CLASS ID EXTENDS ID LACCOL class_variables class_fonctions RACCOL\n                | CLASS ID LACCOL class_variables class_fonctions_return_id RACCOL\n                | CLASS ID EXTENDS ID LACCOL class_variables class_fonctions_return_id RACCOL\n    \n    statement : ID LCROCHET ID RCROCHET\n    statement : ID POINT ID\n    empty :'
    
_lr_action_items = {'ID':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,35,36,37,38,39,40,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,100,101,102,103,105,106,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,237,238,239,241,242,243,244,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,270,271,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,319,320,321,323,329,330,334,335,336,337,338,339,340,341,342,344,345,346,349,350,351,352,353,359,360,362,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,422,423,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[3,3,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,92,-16,-3,101,-15,102,103,104,-4,-5,-6,-7,-8,-42,-43,106,-1,108,128,129,130,133,135,137,139,141,143,144,-239,-241,145,149,153,155,157,159,161,164,164,164,164,164,164,181,181,190,190,181,181,190,190,190,229,236,240,-84,-85,-87,246,-86,248,-48,-9,-15,-3,-4,-16,-74,255,256,257,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,272,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,3,-16,289,290,291,293,293,164,164,164,311,-240,-242,315,-84,-85,-87,-285,-257,-255,164,130,133,135,137,139,141,331,332,139,349,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,293,293,164,-279,331,332,236,236,236,236,236,236,394,394,394,394,394,394,-48,-16,293,293,164,164,3,416,-281,-283,-73,3,-73,3,-73,3,-73,3,-73,3,-73,3,3,-73,3,-73,450,451,3,-73,3,-73,3,-73,181,181,3,3,486,487,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,349,-215,-216,394,-219,-220,-221,-222,-223,-224,-260,-261,-262,3,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,564,565,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,164,164,394,-170,-202,394,-169,-201,394,-193,-206,394,-194,-205,394,-187,-204,394,-188,-203,394,-176,-208,394,-175,-207,394,-181,-210,394,-182,-209,394,-199,-212,394,-200,-211,-217,-218,-251,-253,-73,3,3,-73,-73,3,3,-73,-73,3,3,-73,-73,3,3,-73,-73,3,3,-73,-73,3,3,-73,-239,236,3,3,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,3,3,3,3,3,-243,-244,3,3,246,]),'CLASS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[29,29,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,29,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,29,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,29,29,29,29,29,29,29,29,29,29,29,29,-48,-16,29,-281,-283,-73,29,-73,29,-73,29,-73,29,-73,29,-73,29,29,-73,29,-73,29,-73,29,-73,29,-73,29,-73,29,29,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,29,-219,-220,-221,-222,-223,-224,-260,-261,-262,29,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,29,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,29,-170,-202,29,-169,-201,29,-193,-206,29,-194,-205,29,-187,-204,29,-188,-203,29,-176,-208,29,-175,-207,29,-181,-210,29,-182,-209,29,-199,-212,29,-200,-211,-217,-218,-251,-253,-73,29,29,-73,-73,29,29,-73,-73,29,29,-73,-73,29,29,-73,-73,29,29,-73,-73,29,29,-73,-239,29,29,29,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,29,29,29,29,29,-243,-244,29,29,]),'BOOLEAN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[30,30,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,115,132,132,132,132,132,132,-239,-241,132,132,132,132,132,132,132,177,183,187,192,196,200,203,204,207,208,209,214,224,232,235,-84,-85,-87,132,-86,132,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,30,-16,132,132,132,314,-240,-242,-84,-85,-87,-285,-257,-255,132,132,132,132,132,132,132,132,350,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,132,-279,235,235,235,235,235,235,235,235,235,235,235,235,-48,-16,132,132,30,-281,-283,428,428,-73,30,-73,30,-73,30,-73,30,-73,30,-73,30,30,-73,30,-73,30,-73,30,-73,30,-73,30,-73,464,470,30,30,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,350,-215,-216,235,-219,-220,-221,-222,-223,-224,-260,-261,-262,30,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,30,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,132,132,235,-170,-202,235,-169,-201,235,-193,-206,235,-194,-205,235,-187,-204,235,-188,-203,235,-176,-208,235,-175,-207,235,-181,-210,235,-182,-209,235,-199,-212,235,-200,-211,-217,-218,-251,-253,-73,30,30,-73,-73,30,30,-73,-73,30,30,-73,-73,30,30,-73,-73,30,30,-73,-73,30,30,-73,-239,235,30,30,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,30,30,30,30,30,-243,-244,30,30,132,]),'IF':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[31,31,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,31,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,31,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,31,31,31,31,31,31,31,31,31,31,31,31,-48,-16,31,-281,-283,-73,31,-73,31,-73,31,-73,31,-73,31,-73,31,31,-73,31,-73,31,-73,31,-73,31,-73,31,-73,31,31,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,31,-219,-220,-221,-222,-223,-224,-260,-261,-262,31,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,31,31,31,31,31,31,31,31,31,31,31,31,-239,31,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,31,-170,-202,31,-169,-201,31,-193,-206,31,-194,-205,31,-187,-204,31,-188,-203,31,-176,-208,31,-175,-207,31,-181,-210,31,-182,-209,31,-199,-212,31,-200,-211,-217,-218,-251,-253,-73,31,31,-73,-73,31,31,-73,-73,31,31,-73,-73,31,31,-73,-73,31,31,-73,-73,31,31,-73,-239,31,31,31,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,31,31,31,31,31,-243,-244,31,31,]),'WHILE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,286,287,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[32,32,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,32,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,32,-16,-240,-242,-84,-85,-87,-285,-257,-255,347,348,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,32,32,32,32,32,32,32,32,32,32,32,32,-48,-16,32,-281,-283,-73,32,-73,32,-73,32,-73,32,-73,32,-73,32,32,-73,32,-73,32,-73,32,-73,32,-73,32,-73,32,32,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,32,-219,-220,-221,-222,-223,-224,-260,-261,-262,32,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,32,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,32,-170,-202,32,-169,-201,32,-193,-206,32,-194,-205,32,-187,-204,32,-188,-203,32,-176,-208,32,-175,-207,32,-181,-210,32,-182,-209,32,-199,-212,32,-200,-211,-217,-218,-251,-253,-73,32,32,-73,-73,32,32,-73,-73,32,32,-73,-73,32,32,-73,-73,32,32,-73,-73,32,32,-73,-239,32,32,32,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,32,32,32,32,32,-243,-244,32,32,]),'DO':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[33,33,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,33,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,33,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,33,33,33,33,33,33,33,33,33,33,33,33,-48,-16,33,-281,-283,-73,33,-73,33,-73,33,-73,33,-73,33,-73,33,33,-73,33,-73,33,-73,33,-73,33,-73,33,-73,33,33,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,33,-219,-220,-221,-222,-223,-224,-260,-261,-262,33,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,33,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,33,-170,-202,33,-169,-201,33,-193,-206,33,-194,-205,33,-187,-204,33,-188,-203,33,-176,-208,33,-175,-207,33,-181,-210,33,-182,-209,33,-199,-212,33,-200,-211,-217,-218,-251,-253,-73,33,33,-73,-73,33,33,-73,-73,33,33,-73,-73,33,33,-73,-73,33,33,-73,-73,33,33,-73,-239,33,33,33,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,33,33,33,33,33,-243,-244,33,33,]),'FOR':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[34,34,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,34,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,34,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,34,34,34,34,34,34,34,34,34,34,34,34,-48,-16,34,-281,-283,-73,34,-73,34,-73,34,-73,34,-73,34,-73,34,34,-73,34,-73,34,-73,34,-73,34,-73,34,-73,34,34,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,34,-219,-220,-221,-222,-223,-224,-260,-261,-262,34,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,34,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,34,-170,-202,34,-169,-201,34,-193,-206,34,-194,-205,34,-187,-204,34,-188,-203,34,-176,-208,34,-175,-207,34,-181,-210,34,-182,-209,34,-199,-212,34,-200,-211,-217,-218,-251,-253,-73,34,34,-73,-73,34,34,-73,-73,34,34,-73,-73,34,34,-73,-73,34,34,-73,-73,34,34,-73,-239,34,34,34,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,34,34,34,34,34,-243,-244,34,34,]),'TYPEINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[36,36,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,117,117,117,117,117,117,117,-239,-241,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,237,-84,-85,-87,117,-86,117,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,36,-16,117,117,117,117,-240,-242,-84,-85,-87,-285,-257,-255,117,117,117,117,117,117,117,117,117,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,117,-279,237,237,237,237,237,237,237,237,237,237,237,237,-48,-16,117,117,36,-281,-283,-73,36,-73,36,-73,36,-73,36,-73,36,-73,36,36,-73,36,-73,36,-73,36,-73,36,-73,36,-73,117,117,36,36,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,117,-215,-216,237,-219,-220,-221,-222,-223,-224,-260,-261,-262,36,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,36,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,117,117,237,-170,-202,237,-169,-201,237,-193,-206,237,-194,-205,237,-187,-204,237,-188,-203,237,-176,-208,237,-175,-207,237,-181,-210,237,-182,-209,237,-199,-212,237,-200,-211,-217,-218,-251,-253,-73,36,36,-73,-73,36,36,-73,-73,36,36,-73,-73,36,36,-73,-73,36,36,-73,-73,36,36,-73,-239,237,36,36,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,36,36,36,36,36,-243,-244,36,36,117,]),'TYPEFLOAT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[38,38,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,118,118,118,118,118,118,118,-239,-241,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,238,-84,-85,-87,118,-86,118,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,38,-16,118,118,118,118,-240,-242,-84,-85,-87,-285,-257,-255,118,118,118,118,118,118,118,118,118,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,118,-279,238,238,238,238,238,238,238,238,238,238,238,238,-48,-16,118,118,38,-281,-283,-73,38,-73,38,-73,38,-73,38,-73,38,-73,38,38,-73,38,-73,38,-73,38,-73,38,-73,38,-73,118,118,38,38,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,118,-215,-216,238,-219,-220,-221,-222,-223,-224,-260,-261,-262,38,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,38,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,118,118,238,-170,-202,238,-169,-201,238,-193,-206,238,-194,-205,238,-187,-204,238,-188,-203,238,-176,-208,238,-175,-207,238,-181,-210,238,-182,-209,238,-199,-212,238,-200,-211,-217,-218,-251,-253,-73,38,38,-73,-73,38,38,-73,-73,38,38,-73,-73,38,38,-73,-73,38,38,-73,-73,38,38,-73,-239,238,38,38,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,38,38,38,38,38,-243,-244,38,38,118,]),'TYPESTRING':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[39,39,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,119,119,119,119,119,119,119,-239,-241,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,239,-84,-85,-87,119,-86,119,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,39,-16,119,119,119,119,-240,-242,-84,-85,-87,-285,-257,-255,119,119,119,119,119,119,119,119,119,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,119,-279,239,239,239,239,239,239,239,239,239,239,239,239,-48,-16,119,119,39,-281,-283,-73,39,-73,39,-73,39,-73,39,-73,39,-73,39,39,-73,39,-73,39,-73,39,-73,39,-73,39,-73,119,119,39,39,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,119,-215,-216,239,-219,-220,-221,-222,-223,-224,-260,-261,-262,39,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,39,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,119,119,239,-170,-202,239,-169,-201,239,-193,-206,239,-194,-205,239,-187,-204,239,-188,-203,239,-176,-208,239,-175,-207,239,-181,-210,239,-182,-209,239,-199,-212,239,-200,-211,-217,-218,-251,-253,-73,39,39,-73,-73,39,39,-73,-73,39,39,-73,-73,39,39,-73,-73,39,39,-73,-73,39,39,-73,-239,239,39,39,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,39,39,39,39,39,-243,-244,39,39,119,]),'FCT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,329,330,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,367,368,369,371,372,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[40,40,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,40,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,40,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-48,-16,40,-281,422,422,-283,423,423,-73,40,-73,40,-73,40,-73,40,-73,40,-73,40,40,-73,40,-73,40,-73,40,-73,40,-73,40,-73,40,40,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,40,-219,-220,-221,-222,-223,-224,-260,-261,-262,40,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,40,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,40,-170,-202,40,-169,-201,40,-193,-206,40,-194,-205,40,-187,-204,40,-188,-203,40,-176,-208,40,-175,-207,40,-181,-210,40,-182,-209,40,-199,-212,40,-200,-211,-217,-218,-251,-253,-73,40,40,-73,-73,40,40,-73,-73,40,40,-73,-73,40,40,-73,-73,40,40,-73,-73,40,40,-73,-239,40,40,40,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,40,40,40,40,40,-243,-244,40,40,]),'RETURN':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,99,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,],[41,41,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,41,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,41,-16,-240,-242,-84,-85,-87,-285,-257,-255,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,41,41,41,41,41,41,41,41,41,41,41,41,-48,-16,41,-281,-283,-73,41,-73,41,-73,41,-73,41,-73,41,-73,41,41,-73,41,-73,41,-73,41,-73,41,-73,41,-73,41,41,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,41,-219,-220,-221,-222,-223,-224,-260,-261,-262,41,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,41,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,41,-170,-202,41,-169,-201,41,-193,-206,41,-194,-205,41,-187,-204,41,-188,-203,41,-176,-208,41,-175,-207,41,-181,-210,41,-182,-209,41,-199,-212,41,-200,-211,-217,-218,-251,-253,-73,41,41,-73,-73,41,41,-73,-73,41,41,-73,-73,41,41,-73,-73,41,41,-73,-73,41,41,-73,-239,41,41,41,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,41,41,41,41,640,-243,-244,41,640,]),'INT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,241,242,243,244,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,319,320,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,351,352,353,359,360,362,365,369,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,408,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[35,35,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,113,35,35,35,35,35,35,-239,-241,35,151,151,151,151,151,151,35,35,35,35,35,35,151,151,151,151,151,151,35,35,35,35,35,35,35,35,35,35,35,-84,-85,-87,35,-86,35,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,35,-16,296,296,35,35,35,312,-240,-242,317,-84,-85,-87,-285,-257,-255,35,35,35,35,35,35,35,343,113,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,296,296,35,-279,35,35,35,35,35,35,35,35,35,35,35,35,-48,-16,296,296,35,35,35,418,-281,-283,425,425,-73,35,-73,35,-73,35,-73,35,-73,35,-73,35,35,-73,35,-73,35,-73,35,-73,35,-73,35,-73,35,35,471,35,35,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,113,-215,-216,35,-219,-220,-221,-222,-223,-224,-260,-261,-262,35,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,35,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,35,35,35,-170,-202,35,-169,-201,35,-193,-206,35,-194,-205,35,-187,-204,35,-188,-203,35,-176,-208,35,-175,-207,35,-181,-210,35,-182,-209,35,-199,-212,35,-200,-211,-217,-218,-251,-253,-73,35,35,-73,-73,35,35,-73,-73,35,35,-73,-73,35,35,-73,-73,35,35,-73,-73,35,35,-73,-239,35,35,35,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,35,35,35,35,35,-243,-244,35,35,35,]),'FLOAT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,241,242,243,244,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,319,320,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,351,352,353,359,360,362,365,369,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[42,42,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,114,42,42,42,42,42,42,-239,-241,42,152,152,152,152,152,152,42,42,42,42,42,42,152,152,152,152,152,152,42,42,42,42,42,42,42,42,42,42,42,-84,-85,-87,42,-86,42,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,42,-16,297,297,42,42,42,313,-240,-242,318,-84,-85,-87,-285,-257,-255,42,42,42,42,42,42,42,42,114,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,297,297,42,-279,42,42,42,42,42,42,42,42,42,42,42,42,-48,-16,297,297,42,42,42,419,-281,-283,426,426,-73,42,-73,42,-73,42,-73,42,-73,42,-73,42,42,-73,42,-73,42,-73,42,-73,42,-73,42,-73,42,42,42,42,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,114,-215,-216,42,-219,-220,-221,-222,-223,-224,-260,-261,-262,42,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,42,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,42,42,42,-170,-202,42,-169,-201,42,-193,-206,42,-194,-205,42,-187,-204,42,-188,-203,42,-176,-208,42,-175,-207,42,-181,-210,42,-182,-209,42,-199,-212,42,-200,-211,-217,-218,-251,-253,-73,42,42,-73,-73,42,42,-73,-73,42,42,-73,-73,42,42,-73,-73,42,42,-73,-73,42,42,-73,-239,42,42,42,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,42,42,42,42,42,-243,-244,42,42,42,]),'STRING':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,355,356,357,359,360,361,362,363,364,365,369,377,378,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[37,37,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,112,37,37,37,37,37,37,-239,-241,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-84,-85,-87,37,-86,249,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,37,-16,37,37,37,112,-240,-242,316,-84,-85,-87,-285,-257,-255,37,37,37,37,37,37,37,37,112,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,37,-279,37,37,37,37,37,37,37,37,37,37,37,37,-48,-16,37,409,410,411,37,37,415,417,420,421,-281,-283,427,427,-73,37,-73,37,-73,37,-73,37,-73,37,-73,37,37,-73,37,-73,37,-73,37,-73,37,-73,37,-73,37,37,37,37,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,112,-215,-216,37,-219,-220,-221,-222,-223,-224,-260,-261,-262,37,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,37,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,37,37,37,-170,-202,37,-169,-201,37,-193,-206,37,-194,-205,37,-187,-204,37,-188,-203,37,-176,-208,37,-175,-207,37,-181,-210,37,-182,-209,37,-199,-212,37,-200,-211,-217,-218,-251,-253,-73,37,37,-73,-73,37,37,-73,-73,37,37,-73,-73,37,37,-73,-73,37,37,-73,-73,37,37,-73,-239,37,37,37,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,37,37,37,37,37,-243,-244,37,37,37,]),'TYPEBOOL':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[49,49,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,49,49,49,49,49,49,49,-239,-241,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-84,-85,-87,49,-86,49,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,49,-16,49,49,49,49,-240,-242,-84,-85,-87,-285,-257,-255,49,49,49,49,49,49,49,49,49,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,49,-279,49,49,49,49,49,49,49,49,49,49,49,49,-48,-16,49,49,49,-281,-283,-73,49,-73,49,-73,49,-73,49,-73,49,-73,49,49,-73,49,-73,49,-73,49,-73,49,-73,49,-73,49,49,49,49,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,49,-215,-216,49,-219,-220,-221,-222,-223,-224,-260,-261,-262,49,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,49,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,49,49,49,-170,-202,49,-169,-201,49,-193,-206,49,-194,-205,49,-187,-204,49,-188,-203,49,-176,-208,49,-175,-207,49,-181,-210,49,-182,-209,49,-199,-212,49,-200,-211,-217,-218,-251,-253,-73,49,49,-73,-73,49,49,-73,-73,49,49,-73,-73,49,49,-73,-73,49,49,-73,-73,49,49,-73,-239,49,49,49,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,49,49,49,49,49,-243,-244,49,49,49,]),'PRINT':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,52,55,56,57,58,59,60,63,64,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,101,102,103,105,106,107,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,243,244,247,251,252,253,255,256,257,258,259,260,261,262,263,264,265,266,267,282,288,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,321,323,334,335,336,337,338,339,340,341,342,344,345,346,349,350,353,359,360,365,369,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,397,398,400,401,402,403,404,405,406,407,412,414,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,504,505,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,599,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,641,],[50,50,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,50,50,50,50,50,50,50,-239,-241,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-84,-85,-87,50,-86,50,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-73,50,-16,50,50,50,50,-240,-242,-84,-85,-87,-285,-257,-255,50,50,50,50,50,50,50,50,50,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,50,-279,50,50,50,50,50,50,50,50,50,50,50,50,-48,-16,50,50,50,-281,-283,-73,50,-73,50,-73,50,-73,50,-73,50,-73,50,50,-73,50,-73,50,-73,50,-73,50,-73,50,-73,50,50,50,50,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,50,-215,-216,50,-219,-220,-221,-222,-223,-224,-260,-261,-262,50,-250,-69,-70,-40,-41,-35,-36,-38,-37,-39,-282,-284,-239,50,-73,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-69,-70,-252,-254,50,50,50,-170,-202,50,-169,-201,50,-193,-206,50,-194,-205,50,-187,-204,50,-188,-203,50,-176,-208,50,-175,-207,50,-181,-210,50,-182,-209,50,-199,-212,50,-200,-211,-217,-218,-251,-253,-73,50,50,-73,-73,50,50,-73,-73,50,50,-73,-73,50,50,-73,-73,50,50,-73,-73,50,50,-73,-239,50,50,50,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-73,50,50,50,50,50,-243,-244,50,50,50,]),'$end':([1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,252,253,255,256,257,258,259,260,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,365,369,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,453,454,455,456,457,458,472,473,474,476,479,480,481,482,483,484,485,488,489,506,507,508,509,510,511,512,513,514,515,516,517,519,522,523,527,528,530,531,533,534,536,537,539,540,542,543,545,546,548,549,551,552,554,555,557,558,560,561,562,563,567,568,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,636,637,],[0,-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-240,-242,-84,-85,-87,-285,-257,-255,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,-281,-283,-280,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,-219,-220,-221,-222,-223,-224,-260,-261,-262,-250,-40,-41,-35,-36,-38,-37,-39,-282,-284,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,-252,-254,-170,-202,-169,-201,-193,-206,-194,-205,-187,-204,-188,-203,-176,-208,-175,-207,-181,-210,-182,-209,-199,-212,-200,-211,-217,-218,-251,-253,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,-243,-244,]),'RACCOL':([2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,35,37,42,43,44,45,46,47,48,51,63,64,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,233,234,235,252,253,255,256,257,258,259,260,268,269,289,290,291,293,295,296,297,299,301,305,306,307,308,309,310,311,312,313,314,323,324,325,326,327,328,349,350,365,366,369,370,373,374,375,376,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,395,396,400,401,402,403,404,405,414,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,453,454,455,456,457,458,472,473,474,475,476,477,478,479,480,481,482,483,484,485,488,489,502,503,506,507,508,509,510,511,512,513,514,515,516,517,519,520,521,522,523,527,528,530,531,533,534,536,537,539,540,542,543,545,546,548,549,551,552,554,555,557,558,560,561,562,563,567,568,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,633,636,637,638,],[-2,-73,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-72,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-1,-239,-241,-84,-85,-87,-86,-48,-9,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-286,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-256,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,286,287,-16,-240,-242,-84,-85,-87,-285,-257,-255,323,-268,-84,-85,-87,-10,-88,-11,-12,-89,-91,-258,-259,-90,-92,-93,-94,-48,-44,-45,-47,-279,365,369,-267,-272,-274,-48,-16,-281,-271,-283,-273,-275,-277,-276,-278,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,448,449,453,454,455,456,457,458,476,-269,-263,-264,-265,-266,-270,-280,488,489,-153,-154,-155,-156,-157,-158,-159,-161,-160,-162,-163,-164,-213,-214,-215,-216,-219,-220,-221,-222,-223,-224,-260,-261,-262,519,-250,522,523,-40,-41,-35,-36,-38,-37,-39,-282,-284,562,563,-227,-229,-231,-233,-234,-237,-228,-230,-232,-235,-236,-238,-249,567,568,-252,-254,-170,-202,-169,-201,-193,-206,-194,-205,-187,-204,-188,-203,-176,-208,-175,-207,-181,-210,-182,-209,-199,-212,-200,-211,-217,-218,-251,-253,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,-168,-166,-165,-167,-192,-190,-189,-191,-186,-184,-183,-185,-174,-172,-171,-173,-180,-178,-177,-179,-198,-196,-195,-197,-225,-226,636,637,476,-243,-244,519,]),'EQ':([3,101,102,103,106,108,130,133,135,137,139,141,145,164,181,190,229,236,246,248,255,256,257,289,290,291,311,331,332,349,394,450,564,],[52,241,242,243,247,251,251,251,251,251,251,251,251,251,251,251,251,288,251,251,319,320,321,351,352,353,251,377,378,251,447,52,52,]),'LCROCHET':([3,236,394,450,564,],[53,53,53,53,53,]),'POINT':([3,236,394,450,564,],[54,54,54,54,54,]),'EQEQ':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[55,72,93,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,55,72,-15,-3,-4,93,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,72,262,-143,-16,-149,-150,-125,-16,-128,-132,55,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,93,-116,-118,-120,-122,93,-135,-137,-139,-141,93,55,93,72,93,55,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,55,-3,-4,93,55,93,72,72,72,72,72,72,72,55,72,72,72,72,72,55,93,93,-40,-41,-35,-36,-38,-37,-39,72,55,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'NOTEQ':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[56,73,94,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,56,73,-15,-3,-4,94,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,73,263,-143,-16,-149,-150,-125,-16,-128,-132,56,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,94,-116,-118,-120,-122,94,-135,-137,-139,-141,94,56,94,73,94,56,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,56,-3,-4,94,56,94,73,73,73,73,73,73,73,56,73,73,73,73,73,56,94,94,-40,-41,-35,-36,-38,-37,-39,73,56,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'GREATER':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[57,74,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,57,74,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,74,264,-143,-16,-149,-150,-125,-16,-128,-132,57,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,57,-16,74,-16,57,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,57,-3,-4,-16,57,-16,74,74,74,74,74,74,74,57,74,74,74,74,74,57,-16,-16,-40,-41,-35,-36,-38,-37,-39,74,57,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'GREATEREQ':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[58,75,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,58,75,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,75,265,-143,-16,-149,-150,-125,-16,-128,-132,58,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,58,-16,75,-16,58,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,58,-3,-4,-16,58,-16,75,75,75,75,75,75,75,58,75,75,75,75,75,58,-16,-16,-40,-41,-35,-36,-38,-37,-39,75,58,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LESS':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[59,76,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,59,76,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,76,266,-143,-16,-149,-150,-125,-16,-128,-132,59,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,282,-16,76,-16,59,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,59,-3,-4,-16,59,-16,76,76,76,76,76,76,76,59,76,76,76,76,76,59,-16,-16,-40,-41,-35,-36,-38,-37,-39,76,59,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'LESSEQ':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,255,256,257,289,290,291,293,295,296,297,299,301,307,308,309,310,311,312,313,314,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[60,77,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,60,77,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,77,267,-143,-16,-149,-150,-125,-16,-128,-132,60,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,60,-16,77,-16,60,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,60,-3,-4,-16,60,-16,77,77,77,77,77,77,77,60,77,77,77,77,77,60,-16,-16,-40,-41,-35,-36,-38,-37,-39,77,60,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'AND':([3,5,6,7,8,30,35,37,42,43,44,45,46,47,48,106,108,112,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,225,226,227,228,232,235,236,255,256,257,293,295,296,297,299,301,307,308,309,310,311,312,313,314,343,349,350,394,450,459,460,461,464,465,466,467,470,479,480,481,482,483,484,485,564,],[61,84,86,88,90,95,-3,-15,-4,-5,-6,-7,-8,-42,-43,-86,61,-46,95,-74,84,86,88,90,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,84,86,88,95,90,84,86,88,95,95,61,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,61,-44,-45,95,-3,61,95,61,61,84,88,86,95,84,88,86,95,-40,-41,-35,-36,-38,-37,-39,61,]),'OR':([3,5,6,7,8,30,35,37,42,43,44,45,46,47,48,106,108,112,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,224,225,226,227,228,232,235,236,255,256,257,293,295,296,297,299,301,307,308,309,310,311,312,313,314,343,349,350,394,450,459,460,461,464,465,466,467,470,479,480,481,482,483,484,485,564,],[62,85,87,89,91,96,-3,-15,-4,-5,-6,-7,-8,-42,-43,-86,62,-46,96,-74,85,87,89,91,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,85,87,89,96,91,85,87,89,96,96,62,-84,-85,-87,-10,-88,-11,-12,-89,-91,-90,-92,-93,-94,62,-44,-45,96,-3,62,96,62,62,85,89,87,96,85,89,87,96,-40,-41,-35,-36,-38,-37,-39,62,]),'INC':([3,110,113,114,236,394,450,451,564,565,],[63,252,-13,-14,63,63,502,503,597,598,]),'DEC':([3,110,113,114,236,394,450,564,],[64,253,-13,-14,64,64,64,64,]),'LPAREN':([3,31,32,34,41,50,104,111,236,294,298,300,347,348,354,394,450,486,487,564,640,],[65,97,98,100,105,107,244,254,65,355,356,357,406,407,408,65,65,524,525,65,641,]),'PLUS':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[66,78,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,66,78,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,66,-107,-16,66,78,66,-109,66,-110,66,-111,66,-112,-133,-152,66,78,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,66,78,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,78,66,-143,-16,-149,-150,-125,-16,-128,-132,66,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,66,-16,78,-16,66,78,66,66,-15,78,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,78,78,78,-92,-93,-94,66,-3,-4,-16,78,-3,66,-16,78,78,78,78,78,78,78,66,78,78,78,78,78,78,66,-16,-16,-40,-41,-35,-36,-38,-37,-39,78,66,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'MINUS':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[67,79,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,67,79,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,67,-107,-16,67,79,67,-109,67,-110,67,-111,67,-112,-133,-152,67,79,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,67,79,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,79,67,-143,-16,-149,-150,-125,-16,-128,-132,67,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,67,-16,79,-16,67,79,67,67,-15,79,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,79,79,79,-92,-93,-94,67,-3,-4,-16,79,-3,67,-16,79,79,79,79,79,79,79,67,79,79,79,79,79,79,67,-16,-16,-40,-41,-35,-36,-38,-37,-39,79,67,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'MULT':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[68,80,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,68,80,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,68,-107,-16,68,80,68,-109,68,-110,68,-111,68,-112,-133,-152,68,80,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,68,80,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,80,68,-143,-16,-149,-150,-125,-16,-128,-132,68,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,68,-16,80,-16,68,80,68,68,-15,80,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,80,80,80,-92,-93,-94,68,-3,-4,-16,80,-3,68,-16,80,80,80,80,80,80,80,68,80,80,80,80,80,80,68,-16,-16,-40,-41,-35,-36,-38,-37,-39,80,68,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'DIVIDE':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[69,81,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,69,81,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,69,-107,-16,69,81,69,-109,69,-110,69,-111,69,-112,-133,-152,69,81,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,69,81,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,81,69,-143,-16,-149,-150,-125,-16,-128,-132,69,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,69,-16,81,-16,69,81,69,69,-15,81,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,81,81,81,-92,-93,-94,69,-3,-4,-16,81,-3,69,-16,81,81,81,81,81,81,81,69,81,81,81,81,81,81,69,-16,-16,-40,-41,-35,-36,-38,-37,-39,81,69,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'PERCENT':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[70,82,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,70,82,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,70,-107,-16,70,82,70,-109,70,-110,70,-111,70,-112,-133,-152,70,82,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,70,82,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,82,70,-143,-16,-149,-150,-125,-16,-128,-132,70,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,70,-16,82,-16,70,82,70,70,-15,82,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,82,82,82,-92,-93,-94,70,-3,-4,-16,82,-3,70,-16,82,82,82,82,82,82,82,70,82,82,82,82,82,82,70,-16,-16,-40,-41,-35,-36,-38,-37,-39,82,70,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'POW':([3,4,30,35,37,42,43,44,45,46,47,48,101,102,103,106,108,109,112,113,114,115,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,224,229,232,233,235,236,245,246,248,249,250,255,256,257,289,290,291,293,295,296,297,299,301,304,307,308,309,310,311,312,313,314,322,343,349,350,380,382,384,386,388,390,393,394,396,398,401,403,405,413,450,464,470,479,480,481,482,483,484,485,505,564,573,576,577,580,581,584,585,588,589,592,593,596,630,],[71,83,-16,-3,-15,-4,-5,-6,-7,-8,-42,-43,-84,-85,-87,-86,71,83,-15,-3,-4,-16,-74,-75,-76,-77,-78,-79,-80,-81,-82,71,-107,-16,71,83,71,-109,71,-110,71,-111,71,-112,-133,-152,71,83,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,71,83,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-16,-130,-131,83,71,-143,-16,-149,-150,-125,-16,-128,-132,71,-144,-16,-147,-151,-126,-16,-127,-129,-145,-16,-146,-148,-123,-142,-113,-114,-16,-116,-118,-120,-122,-16,-135,-137,-139,-141,-16,71,-16,83,-16,71,83,71,71,-15,83,-84,-85,-87,-84,-85,-87,-10,-88,-11,-12,-89,83,83,83,-92,-93,-94,71,-3,-4,-16,83,-3,71,-16,83,83,83,83,83,83,83,71,83,83,83,83,83,83,71,-16,-16,-40,-41,-35,-36,-38,-37,-39,83,71,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'LACCOL':([33,92,272,273,274,275,276,277,278,279,280,281,283,284,285,303,358,399,490,491,492,493,494,495,496,497,498,499,500,501,566,570,572,600,602,],[99,205,333,334,335,336,337,338,339,340,341,342,344,345,346,360,412,452,526,529,532,535,538,541,544,547,550,553,556,559,599,601,603,632,634,]),'RPAREN':([35,37,42,43,44,45,46,47,48,65,106,112,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,226,227,228,230,231,232,244,245,246,248,249,250,255,256,257,293,295,296,297,299,301,302,304,307,308,309,310,311,312,313,314,322,343,409,410,411,413,415,416,417,418,419,420,421,459,460,461,462,463,464,465,466,467,468,469,470,471,479,480,481,482,483,484,485,518,524,525,569,571,],[-3,-15,-4,-5,-6,-7,-8,-42,-43,147,-86,-46,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,259,260,-245,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,273,274,275,276,277,278,279,280,281,283,284,285,303,305,306,308,309,310,-84,-85,-87,-10,-88,-11,-12,-89,-91,358,-247,-90,-92,-93,-94,-48,-44,-45,-47,-246,399,472,473,474,-248,479,480,481,482,483,484,485,506,507,508,509,510,511,512,513,514,515,516,517,518,-40,-41,-35,-36,-38,-37,-39,566,570,572,600,602,]),'VIRGULE':([35,37,42,43,44,45,46,47,48,106,112,116,120,121,122,123,124,125,126,127,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,218,255,256,257,293,295,296,297,299,301,302,304,307,308,309,310,311,312,313,314,315,316,317,318,322,413,479,480,481,482,483,484,485,569,571,],[-3,-15,-4,-5,-6,-7,-8,-42,-43,-86,-46,-74,-75,-76,-77,-78,-79,-80,-81,-82,-101,-107,-16,-102,-108,-103,-109,-104,-110,-105,-111,-106,-112,-133,-152,261,-245,-19,-18,-13,-14,-22,-21,-25,-24,-28,-27,-31,-30,-34,-33,-95,-96,-97,-98,-99,-100,-17,-20,-23,-26,-29,-32,-124,-117,-130,-131,-143,-136,-149,-150,-125,-119,-128,-132,-144,-138,-147,-151,-126,-121,-127,-129,-145,-140,-146,-148,-123,-142,-113,-114,-115,-116,-118,-120,-122,-134,-135,-137,-139,-141,-84,-85,-87,-10,-88,-11,-12,-89,-91,359,-247,-90,-92,-93,-94,-48,-44,-45,-47,361,362,363,364,-246,-248,-40,-41,-35,-36,-38,-37,-39,359,359,]),'CONCAT':([52,251,288,447,],[111,111,111,111,]),'EXTENDS':([92,],[206,]),'RCROCHET':([128,],[258,]),'PUBLIC':([205,268,269,324,325,326,327,328,333,366,370,373,374,375,376,379,424,425,426,427,428,429,431,432,476,519,522,523,567,568,],[270,329,-268,367,371,-267,-272,-274,270,-271,-273,-275,-277,-276,-278,329,-269,-263,-264,-265,-266,-270,367,371,-250,-249,-252,-254,-251,-253,]),'PRIVATE':([205,268,269,324,325,326,327,328,333,366,370,373,374,375,376,379,424,425,426,427,428,429,431,432,476,519,522,523,567,568,],[271,330,-268,368,372,-267,-272,-274,271,-271,-273,-275,-277,-276,-278,330,-269,-263,-264,-265,-266,-270,368,372,-250,-249,-252,-254,-251,-253,]),'IN':([240,],[292,]),'SCAN':([241,242,243,351,352,353,],[294,298,300,294,298,300,]),'RANGE':([292,],[354,]),'ELSE':([433,434,435,436,437,438,439,440,441,442,443,444,],[490,491,492,493,494,495,496,497,498,499,500,501,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,99,334,335,336,337,338,339,340,341,342,344,345,346,360,412,452,526,529,532,535,538,541,544,547,550,553,556,559,599,601,603,632,634,],[1,234,381,383,385,387,389,391,392,395,397,400,402,404,414,475,504,574,575,578,579,582,583,586,587,590,591,594,595,631,633,635,638,639,]),'statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[2,51,2,51,2,2,2,2,2,2,2,2,2,2,2,2,2,51,51,51,51,51,51,51,51,51,51,51,51,2,51,2,51,51,2,2,2,2,2,2,2,2,2,2,2,2,51,51,51,51,51,51,51,51,51,51,51,51,2,2,2,51,2,51,2,51,51,51,]),'expression':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[4,4,109,131,134,136,138,140,142,148,163,165,166,167,168,169,180,180,180,180,180,180,180,180,180,180,233,245,250,4,301,304,307,180,322,131,134,136,138,140,142,140,109,301,380,382,384,386,388,390,393,396,398,401,403,405,301,413,4,4,4,4,4,4,4,4,4,4,4,4,4,180,180,4,4,109,505,4,4,304,304,573,576,577,580,581,584,585,588,589,592,593,596,4,4,4,4,4,4,4,4,4,4,4,4,630,4,4,4,4,4,4,4,4,4,245,]),'compare_statement':([0,1,52,84,85,86,87,88,89,95,96,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[5,5,120,176,182,189,194,198,202,210,215,219,226,5,5,120,120,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,459,465,5,5,120,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'compare_ids_statement':([0,1,52,84,85,86,87,88,89,95,96,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[6,6,121,179,185,186,191,197,201,211,216,220,227,6,6,121,121,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,461,467,6,6,121,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'compare_idvalue_statement':([0,1,52,84,85,86,87,88,89,95,96,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[7,7,122,178,184,188,193,195,199,212,217,221,228,7,7,122,122,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,460,466,7,7,122,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'compare_bool_statement':([0,1,52,95,96,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[8,8,123,213,218,225,225,8,8,123,123,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,225,225,8,8,123,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'and_statement':([0,1,52,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[9,9,124,222,230,9,9,124,124,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,462,468,9,9,124,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'or_statement':([0,1,52,97,98,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[10,10,127,223,231,10,10,127,127,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,463,469,10,10,127,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'and_statement_for_ids':([0,1,52,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[11,11,125,11,11,125,125,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,125,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'or_statement_for_ids':([0,1,52,99,234,251,288,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,447,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[12,12,126,12,12,126,126,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,126,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'if_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,490,491,492,493,494,495,496,497,498,499,500,501,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,527,530,533,536,539,542,545,548,551,554,557,560,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'if_else_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,490,491,492,493,494,495,496,497,498,499,500,501,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,528,531,534,537,540,543,546,549,552,555,558,561,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'while_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'doWhile_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'for_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'inc_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'inc_assign_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'dec_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'dec_assign_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'input_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'fonction':([0,1,99,234,329,330,334,335,336,337,338,339,340,341,342,344,345,346,360,367,368,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[23,23,23,23,373,375,23,23,23,23,23,23,23,23,23,23,23,23,23,373,375,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'appel_fonction':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'return':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,477,25,520,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,477,25,25,520,25,]),'return_id':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,478,26,521,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,478,26,521,]),'fonction_return_id':([0,1,99,234,329,330,334,335,336,337,338,339,340,341,342,344,345,346,360,371,372,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[27,27,27,27,374,376,27,27,27,27,27,27,27,27,27,27,27,27,27,374,376,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'while_fake_statement':([0,1,99,234,334,335,336,337,338,339,340,341,342,344,345,346,360,381,383,385,387,389,391,392,395,397,400,402,404,412,414,452,475,504,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'varval':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,377,378,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,424,429,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'expr_print_id':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'expr_print':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'expr_print_exp':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'int_assign':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'float_assign':([0,1,52,55,56,57,58,59,60,65,72,73,74,75,76,77,84,85,86,87,88,89,95,96,97,98,99,105,107,234,243,244,247,251,261,262,263,264,265,266,267,282,288,321,334,335,336,337,338,339,340,341,342,344,345,346,353,359,360,381,383,385,387,389,391,392,395,397,400,402,404,406,407,412,414,447,452,475,504,524,525,526,529,532,535,538,541,544,547,550,553,556,559,574,575,578,579,582,583,586,587,590,591,594,595,599,601,603,631,632,633,634,635,638,639,641,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'term':([52,66,67,68,69,70,71,78,79,80,81,82,83,288,447,],[110,150,154,156,158,160,162,170,171,172,173,174,175,110,110,]),'booleans':([52,251,288,447,],[116,116,116,116,]),'argument_list':([65,],[146,]),'class_variables':([205,333,],[268,379,]),'class_variable':([205,268,333,379,],[269,326,269,326,]),'factor':([241,242,319,320,351,352,],[295,299,295,299,295,299,]),'parameter_list':([244,524,525,],[302,569,571,]),'class_fonctions':([268,379,],[324,431,]),'class_fonctions_return_id':([268,379,],[325,432,]),'class_fonction':([268,324,379,431,],[327,366,327,366,]),'class_fonction_return_id':([268,325,379,432,],[328,370,328,370,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements','TParser.py',28),
  ('statements -> statement','statements',1,'p_statements','TParser.py',29),
  ('expression -> INT','expression',1,'p_expression','TParser.py',43),
  ('expression -> FLOAT','expression',1,'p_expression','TParser.py',44),
  ('expression -> varval','expression',1,'p_expression','TParser.py',45),
  ('expression -> expr_print_id','expression',1,'p_expression','TParser.py',46),
  ('expression -> expr_print','expression',1,'p_expression','TParser.py',47),
  ('expression -> expr_print_exp','expression',1,'p_expression','TParser.py',48),
  ('statement -> ID EQ expression','statement',3,'p_statement_assign','TParser.py',56),
  ('factor -> ID','factor',1,'p_factor_ID','TParser.py',62),
  ('factor -> INT','factor',1,'p_factor_NUMBER','TParser.py',68),
  ('factor -> FLOAT','factor',1,'p_factor_NUMBER','TParser.py',69),
  ('term -> INT','term',1,'p_term_NUMBER','TParser.py',73),
  ('term -> FLOAT','term',1,'p_term_NUMBER','TParser.py',74),
  ('expression -> STRING','expression',1,'p_expression_STRING','TParser.py',78),
  ('expression -> BOOLEAN','expression',1,'p_expression_BOOLEAN','TParser.py',82),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','TParser.py',90),
  ('expression -> ID PLUS term','expression',3,'p_expression_plus_id','TParser.py',96),
  ('expression -> ID PLUS ID','expression',3,'p_expression_plus_ids','TParser.py',102),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','TParser.py',108),
  ('expression -> ID MINUS term','expression',3,'p_expression_minus_id','TParser.py',113),
  ('expression -> ID MINUS ID','expression',3,'p_expression_minus_ids','TParser.py',119),
  ('expression -> expression MULT term','expression',3,'p_expression_mult','TParser.py',126),
  ('expression -> ID MULT term','expression',3,'p_expression_mult_id','TParser.py',131),
  ('expression -> ID MULT ID','expression',3,'p_expression_mult_ids','TParser.py',137),
  ('expression -> expression DIVIDE term','expression',3,'p_expression_div','TParser.py',143),
  ('expression -> ID DIVIDE term','expression',3,'p_expression_div_id','TParser.py',151),
  ('expression -> ID DIVIDE ID','expression',3,'p_expression_div_ids','TParser.py',159),
  ('expression -> expression PERCENT term','expression',3,'p_expression_modulo','TParser.py',168),
  ('expression -> ID PERCENT term','expression',3,'p_expression_modulo_id','TParser.py',174),
  ('expression -> ID PERCENT ID','expression',3,'p_expression_modulo_ids','TParser.py',180),
  ('expression -> expression POW term','expression',3,'p_expression_pow','TParser.py',186),
  ('expression -> ID POW term','expression',3,'p_expression_pow_id','TParser.py',192),
  ('expression -> ID POW ID','expression',3,'p_expression_pow_ids','TParser.py',198),
  ('expression -> ID EQ CONCAT LPAREN STRING VIRGULE STRING RPAREN','expression',8,'p_expression_concat','TParser.py',208),
  ('expression -> ID EQ CONCAT LPAREN STRING VIRGULE INT RPAREN','expression',8,'p_expression_concat','TParser.py',209),
  ('expression -> ID EQ CONCAT LPAREN INT VIRGULE STRING RPAREN','expression',8,'p_expression_concat','TParser.py',210),
  ('expression -> ID EQ CONCAT LPAREN STRING VIRGULE FLOAT RPAREN','expression',8,'p_expression_concat','TParser.py',211),
  ('expression -> ID EQ CONCAT LPAREN FLOAT VIRGULE STRING RPAREN','expression',8,'p_expression_concat','TParser.py',212),
  ('expression -> ID EQ CONCAT LPAREN ID VIRGULE STRING RPAREN','expression',8,'p_expression_concat','TParser.py',213),
  ('expression -> ID EQ CONCAT LPAREN STRING VIRGULE ID RPAREN','expression',8,'p_expression_concat','TParser.py',214),
  ('expression -> int_assign','expression',1,'p_assign_num','TParser.py',227),
  ('expression -> float_assign','expression',1,'p_assign_num','TParser.py',228),
  ('int_assign -> ID EQ INT','int_assign',3,'p_assign_INT','TParser.py',234),
  ('float_assign -> ID EQ FLOAT','float_assign',3,'p_assign_FLOAT','TParser.py',238),
  ('expression -> ID EQ STRING','expression',3,'p_assign_STRING','TParser.py',242),
  ('expression -> ID EQ BOOLEAN','expression',3,'p_assign_BOOL','TParser.py',247),
  ('expression -> ID EQ ID','expression',3,'p_assign_id','TParser.py',253),
  ('statement -> compare_statement','statement',1,'p_statement','TParser.py',266),
  ('statement -> compare_ids_statement','statement',1,'p_statement','TParser.py',267),
  ('statement -> compare_idvalue_statement','statement',1,'p_statement','TParser.py',268),
  ('statement -> compare_bool_statement','statement',1,'p_statement','TParser.py',269),
  ('statement -> and_statement','statement',1,'p_statement','TParser.py',270),
  ('statement -> or_statement','statement',1,'p_statement','TParser.py',271),
  ('statement -> and_statement_for_ids','statement',1,'p_statement','TParser.py',272),
  ('statement -> or_statement_for_ids','statement',1,'p_statement','TParser.py',273),
  ('statement -> if_statement','statement',1,'p_statement','TParser.py',274),
  ('statement -> if_else_statement','statement',1,'p_statement','TParser.py',275),
  ('statement -> while_statement','statement',1,'p_statement','TParser.py',276),
  ('statement -> doWhile_statement','statement',1,'p_statement','TParser.py',277),
  ('statement -> for_statement','statement',1,'p_statement','TParser.py',278),
  ('statement -> inc_statement','statement',1,'p_statement','TParser.py',279),
  ('statement -> inc_assign_statement','statement',1,'p_statement','TParser.py',280),
  ('statement -> dec_statement','statement',1,'p_statement','TParser.py',281),
  ('statement -> dec_assign_statement','statement',1,'p_statement','TParser.py',282),
  ('statement -> input_statement','statement',1,'p_statement','TParser.py',283),
  ('statement -> fonction','statement',1,'p_statement','TParser.py',284),
  ('statement -> appel_fonction','statement',1,'p_statement','TParser.py',285),
  ('statement -> return','statement',1,'p_statement','TParser.py',286),
  ('statement -> return_id','statement',1,'p_statement','TParser.py',287),
  ('statement -> fonction_return_id','statement',1,'p_statement','TParser.py',288),
  ('statement -> while_fake_statement','statement',1,'p_statement','TParser.py',289),
  ('statement -> expression','statement',1,'p_statement','TParser.py',290),
  ('expression -> ID EQ booleans','expression',3,'p_assign_compare_bool','TParser.py',296),
  ('booleans -> compare_statement','booleans',1,'p_booleans','TParser.py',302),
  ('booleans -> compare_ids_statement','booleans',1,'p_booleans','TParser.py',303),
  ('booleans -> compare_idvalue_statement','booleans',1,'p_booleans','TParser.py',304),
  ('booleans -> compare_bool_statement','booleans',1,'p_booleans','TParser.py',305),
  ('booleans -> and_statement','booleans',1,'p_booleans','TParser.py',306),
  ('booleans -> and_statement_for_ids','booleans',1,'p_booleans','TParser.py',307),
  ('booleans -> or_statement_for_ids','booleans',1,'p_booleans','TParser.py',308),
  ('booleans -> or_statement','booleans',1,'p_booleans','TParser.py',309),
  ('booleans -> BOOLEAN','booleans',1,'p_booleans','TParser.py',310),
  ('expression -> TYPEINT ID','expression',2,'p_declare_INT','TParser.py',318),
  ('expression -> TYPEFLOAT ID','expression',2,'p_declare_FLOAT','TParser.py',322),
  ('expression -> TYPEBOOL ID','expression',2,'p_declare_BOOL','TParser.py',326),
  ('expression -> TYPESTRING ID','expression',2,'p_declare_STRING','TParser.py',330),
  ('expression -> TYPEINT ID EQ factor','expression',4,'p_declareaffect_INT','TParser.py',339),
  ('expression -> TYPEFLOAT ID EQ factor','expression',4,'p_declareaffect_FLOAT','TParser.py',349),
  ('expression -> TYPEBOOL ID EQ expression','expression',4,'p_declareaffect_BOOL','TParser.py',356),
  ('expression -> TYPESTRING ID EQ expression','expression',4,'p_declareaffect_STRING','TParser.py',363),
  ('expr_print_id -> PRINT LPAREN ID RPAREN','expr_print_id',4,'p_print_ID','TParser.py',377),
  ('expr_print -> PRINT LPAREN STRING RPAREN','expr_print',4,'p_print','TParser.py',384),
  ('expr_print_exp -> PRINT LPAREN expression RPAREN','expr_print_exp',4,'p_print_expression','TParser.py',389),
  ('compare_statement -> expression EQEQ expression','compare_statement',3,'p_expression_compare','TParser.py',399),
  ('compare_statement -> expression NOTEQ expression','compare_statement',3,'p_expression_compare','TParser.py',400),
  ('compare_statement -> expression GREATER expression','compare_statement',3,'p_expression_compare','TParser.py',401),
  ('compare_statement -> expression GREATEREQ expression','compare_statement',3,'p_expression_compare','TParser.py',402),
  ('compare_statement -> expression LESS expression','compare_statement',3,'p_expression_compare','TParser.py',403),
  ('compare_statement -> expression LESSEQ expression','compare_statement',3,'p_expression_compare','TParser.py',404),
  ('compare_ids_statement -> ID EQEQ ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',448),
  ('compare_ids_statement -> ID NOTEQ ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',449),
  ('compare_ids_statement -> ID GREATER ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',450),
  ('compare_ids_statement -> ID GREATEREQ ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',451),
  ('compare_ids_statement -> ID LESS ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',452),
  ('compare_ids_statement -> ID LESSEQ ID','compare_ids_statement',3,'p_expression_compareIDs','TParser.py',453),
  ('compare_idvalue_statement -> ID EQEQ expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',505),
  ('compare_idvalue_statement -> ID NOTEQ expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',506),
  ('compare_idvalue_statement -> ID GREATER expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',507),
  ('compare_idvalue_statement -> ID GREATEREQ expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',508),
  ('compare_idvalue_statement -> ID LESS expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',509),
  ('compare_idvalue_statement -> ID LESSEQ expression','compare_idvalue_statement',3,'p_compare_id_value','TParser.py',510),
  ('compare_bool_statement -> BOOLEAN EQEQ BOOLEAN','compare_bool_statement',3,'p_compare_bool','TParser.py',558),
  ('compare_bool_statement -> BOOLEAN NOTEQ BOOLEAN','compare_bool_statement',3,'p_compare_bool','TParser.py',559),
  ('and_statement -> BOOLEAN AND BOOLEAN','and_statement',3,'p_statement_and','TParser.py',581),
  ('and_statement -> BOOLEAN AND compare_statement','and_statement',3,'p_statement_and','TParser.py',582),
  ('and_statement -> compare_statement AND BOOLEAN','and_statement',3,'p_statement_and','TParser.py',583),
  ('and_statement -> BOOLEAN AND compare_ids_statement','and_statement',3,'p_statement_and','TParser.py',584),
  ('and_statement -> compare_ids_statement AND BOOLEAN','and_statement',3,'p_statement_and','TParser.py',585),
  ('and_statement -> BOOLEAN AND compare_idvalue_statement','and_statement',3,'p_statement_and','TParser.py',586),
  ('and_statement -> compare_idvalue_statement AND BOOLEAN','and_statement',3,'p_statement_and','TParser.py',587),
  ('and_statement -> BOOLEAN AND compare_bool_statement','and_statement',3,'p_statement_and','TParser.py',588),
  ('and_statement -> compare_bool_statement AND BOOLEAN','and_statement',3,'p_statement_and','TParser.py',589),
  ('and_statement -> compare_statement AND compare_statement','and_statement',3,'p_statement_and','TParser.py',590),
  ('and_statement -> compare_ids_statement AND compare_ids_statement','and_statement',3,'p_statement_and','TParser.py',591),
  ('and_statement -> compare_idvalue_statement AND compare_idvalue_statement','and_statement',3,'p_statement_and','TParser.py',592),
  ('and_statement -> compare_idvalue_statement AND compare_ids_statement','and_statement',3,'p_statement_and','TParser.py',593),
  ('and_statement -> compare_ids_statement AND compare_idvalue_statement','and_statement',3,'p_statement_and','TParser.py',594),
  ('and_statement -> compare_idvalue_statement AND compare_statement','and_statement',3,'p_statement_and','TParser.py',595),
  ('and_statement -> compare_statement AND compare_idvalue_statement','and_statement',3,'p_statement_and','TParser.py',596),
  ('and_statement -> compare_statement AND compare_ids_statement','and_statement',3,'p_statement_and','TParser.py',597),
  ('and_statement -> compare_ids_statement AND compare_statement','and_statement',3,'p_statement_and','TParser.py',598),
  ('and_statement_for_ids -> ID AND ID','and_statement_for_ids',3,'p_statement_and_for_ids','TParser.py',616),
  ('or_statement -> BOOLEAN OR BOOLEAN','or_statement',3,'p_statement_or','TParser.py',634),
  ('or_statement -> BOOLEAN OR compare_statement','or_statement',3,'p_statement_or','TParser.py',635),
  ('or_statement -> compare_statement OR BOOLEAN','or_statement',3,'p_statement_or','TParser.py',636),
  ('or_statement -> BOOLEAN OR compare_ids_statement','or_statement',3,'p_statement_or','TParser.py',637),
  ('or_statement -> compare_ids_statement OR BOOLEAN','or_statement',3,'p_statement_or','TParser.py',638),
  ('or_statement -> BOOLEAN OR compare_idvalue_statement','or_statement',3,'p_statement_or','TParser.py',639),
  ('or_statement -> compare_idvalue_statement OR BOOLEAN','or_statement',3,'p_statement_or','TParser.py',640),
  ('or_statement -> BOOLEAN OR compare_bool_statement','or_statement',3,'p_statement_or','TParser.py',641),
  ('or_statement -> compare_bool_statement OR BOOLEAN','or_statement',3,'p_statement_or','TParser.py',642),
  ('or_statement -> compare_statement OR compare_statement','or_statement',3,'p_statement_or','TParser.py',643),
  ('or_statement -> compare_ids_statement OR compare_ids_statement','or_statement',3,'p_statement_or','TParser.py',644),
  ('or_statement -> compare_idvalue_statement OR compare_idvalue_statement','or_statement',3,'p_statement_or','TParser.py',645),
  ('or_statement -> compare_idvalue_statement OR compare_ids_statement','or_statement',3,'p_statement_or','TParser.py',646),
  ('or_statement -> compare_ids_statement OR compare_idvalue_statement','or_statement',3,'p_statement_or','TParser.py',647),
  ('or_statement -> compare_idvalue_statement OR compare_statement','or_statement',3,'p_statement_or','TParser.py',648),
  ('or_statement -> compare_statement OR compare_idvalue_statement','or_statement',3,'p_statement_or','TParser.py',649),
  ('or_statement -> compare_statement OR compare_ids_statement','or_statement',3,'p_statement_or','TParser.py',650),
  ('or_statement -> compare_ids_statement OR compare_statement','or_statement',3,'p_statement_or','TParser.py',651),
  ('or_statement_for_ids -> ID OR ID','or_statement_for_ids',3,'p_statement_or_for_ids','TParser.py',661),
  ('if_statement -> IF LPAREN compare_statement RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',676),
  ('if_statement -> IF LPAREN compare_statement RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',677),
  ('if_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',678),
  ('if_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',679),
  ('if_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',680),
  ('if_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',681),
  ('if_statement -> IF LPAREN and_statement RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',682),
  ('if_statement -> IF LPAREN or_statement RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',683),
  ('if_statement -> IF LPAREN and_statement RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',684),
  ('if_statement -> IF LPAREN or_statement RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',685),
  ('if_statement -> IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL','if_statement',7,'p_if_statement','TParser.py',686),
  ('if_statement -> IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL','if_statement',7,'p_if_statement','TParser.py',687),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',700),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',701),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',702),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',703),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',704),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',705),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',706),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',707),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',708),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',709),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',710),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',711),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',712),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',713),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',714),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',715),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',716),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',717),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',718),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',719),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',720),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',721),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',722),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',723),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',724),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',725),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',726),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',727),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',728),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',729),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',730),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE LACCOL statements RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',731),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',732),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE LACCOL expression RACCOL','if_else_statement',11,'p_if_else_statement','TParser.py',733),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',734),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE if_statement','if_else_statement',9,'p_if_else_statement','TParser.py',735),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',736),
  ('if_else_statement -> IF LPAREN compare_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',737),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',738),
  ('if_else_statement -> IF LPAREN compare_idvalue_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',739),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',740),
  ('if_else_statement -> IF LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',741),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',742),
  ('if_else_statement -> IF LPAREN and_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',743),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',744),
  ('if_else_statement -> IF LPAREN or_statement RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',745),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL statements RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',746),
  ('if_else_statement -> IF LPAREN BOOLEAN RPAREN LACCOL expression RACCOL ELSE if_else_statement','if_else_statement',9,'p_if_else_statement','TParser.py',747),
  ('while_statement -> WHILE LPAREN compare_statement RPAREN LACCOL statements RACCOL','while_statement',7,'p_loop_while','TParser.py',788),
  ('while_statement -> WHILE LPAREN compare_statement RPAREN LACCOL expression RACCOL','while_statement',7,'p_loop_while','TParser.py',789),
  ('while_statement -> WHILE LPAREN compare_ids_statement RPAREN LACCOL statements RACCOL','while_statement',7,'p_loop_while','TParser.py',790),
  ('while_statement -> WHILE LPAREN compare_ids_statement RPAREN LACCOL expression RACCOL','while_statement',7,'p_loop_while','TParser.py',791),
  ('while_statement -> WHILE LPAREN compare_idvalue_statement RPAREN LACCOL statements ID INC RACCOL','while_statement',9,'p_loop_while','TParser.py',792),
  ('while_statement -> WHILE LPAREN compare_idvalue_statement RPAREN LACCOL expression ID INC RACCOL','while_statement',9,'p_loop_while','TParser.py',793),
  ('while_statement -> WHILE LPAREN and_statement RPAREN LACCOL statements RACCOL','while_statement',7,'p_loop_while','TParser.py',794),
  ('while_statement -> WHILE LPAREN and_statement RPAREN LACCOL expression RACCOL','while_statement',7,'p_loop_while','TParser.py',795),
  ('while_statement -> WHILE LPAREN or_statement RPAREN LACCOL statements RACCOL','while_statement',7,'p_loop_while','TParser.py',796),
  ('while_statement -> WHILE LPAREN or_statement RPAREN LACCOL expression RACCOL','while_statement',7,'p_loop_while','TParser.py',797),
  ('while_statement -> WHILE LPAREN BOOLEAN RPAREN LACCOL statements RACCOL','while_statement',7,'p_loop_while','TParser.py',798),
  ('while_statement -> WHILE LPAREN BOOLEAN RPAREN LACCOL expression RACCOL','while_statement',7,'p_loop_while','TParser.py',799),
  ('while_fake_statement -> WHILE LPAREN ID LESS INT RPAREN LACCOL statements ID INC RACCOL','while_fake_statement',11,'p_loop_while_fake','TParser.py',818),
  ('while_fake_statement -> WHILE LPAREN ID LESS INT RPAREN LACCOL expression ID INC RACCOL','while_fake_statement',11,'p_loop_while_fake','TParser.py',819),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN compare_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',838),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN compare_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',839),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN compare_idvalue_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',840),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN compare_idvalue_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',841),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN compare_ids_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',842),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN compare_ids_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',843),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN and_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',844),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN or_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',845),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN and_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',846),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN or_statement RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',847),
  ('doWhile_statement -> DO LACCOL expression RACCOL WHILE LPAREN BOOLEAN RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',848),
  ('doWhile_statement -> DO LACCOL statements RACCOL WHILE LPAREN BOOLEAN RPAREN','doWhile_statement',8,'p_doWhile','TParser.py',849),
  ('inc_statement -> ID INC','inc_statement',2,'p_inc','TParser.py',868),
  ('inc_assign_statement -> ID EQ term INC','inc_assign_statement',4,'p_inc_assign','TParser.py',876),
  ('dec_statement -> ID DEC','dec_statement',2,'p_dec','TParser.py',881),
  ('dec_assign_statement -> ID EQ term DEC','dec_assign_statement',4,'p_dec_assign','TParser.py',886),
  ('for_statement -> FOR LPAREN ID IN RANGE LPAREN INT RPAREN RPAREN LACCOL expression RACCOL','for_statement',12,'p_for','TParser.py',894),
  ('for_statement -> FOR LPAREN ID IN RANGE LPAREN INT RPAREN RPAREN LACCOL statements RACCOL','for_statement',12,'p_for','TParser.py',895),
  ('argument_list -> expression','argument_list',1,'p_argument_list','TParser.py',939),
  ('argument_list -> argument_list VIRGULE expression','argument_list',3,'p_argument_list','TParser.py',940),
  ('parameter_list -> expression','parameter_list',1,'p_parameter_list','TParser.py',956),
  ('parameter_list -> parameter_list VIRGULE expression','parameter_list',3,'p_parameter_list','TParser.py',957),
  ('fonction -> FCT ID LPAREN parameter_list RPAREN LACCOL statements RACCOL','fonction',8,'p_fonction','TParser.py',972),
  ('fonction -> FCT ID LPAREN RPAREN LACCOL statements RACCOL','fonction',7,'p_fonction','TParser.py',973),
  ('fonction -> FCT ID LPAREN parameter_list RPAREN LACCOL statements return RACCOL','fonction',9,'p_fonction','TParser.py',974),
  ('fonction -> FCT ID LPAREN RPAREN LACCOL statements return RACCOL','fonction',8,'p_fonction','TParser.py',975),
  ('fonction_return_id -> FCT ID LPAREN parameter_list RPAREN LACCOL statements return_id RACCOL','fonction_return_id',9,'p_fonction_return_id','TParser.py',994),
  ('fonction_return_id -> FCT ID LPAREN RPAREN LACCOL statements return_id RACCOL','fonction_return_id',8,'p_fonction_return_id','TParser.py',995),
  ('appel_fonction -> ID LPAREN argument_list RPAREN','appel_fonction',4,'p_appel','TParser.py',1007),
  ('appel_fonction -> ID LPAREN RPAREN','appel_fonction',3,'p_appel','TParser.py',1008),
  ('appel_fonction -> ID LPAREN ID RPAREN','appel_fonction',4,'p_appel','TParser.py',1009),
  ('return -> RETURN LPAREN expression RPAREN','return',4,'p_return','TParser.py',1021),
  ('return_id -> RETURN LPAREN ID RPAREN','return_id',4,'p_return_id','TParser.py',1029),
  ('input_statement -> TYPEINT ID EQ SCAN LPAREN STRING RPAREN','input_statement',7,'p_input_statement','TParser.py',1037),
  ('input_statement -> TYPEFLOAT ID EQ SCAN LPAREN STRING RPAREN','input_statement',7,'p_input_statement','TParser.py',1038),
  ('input_statement -> TYPESTRING ID EQ SCAN LPAREN STRING RPAREN','input_statement',7,'p_input_statement','TParser.py',1039),
  ('varval -> INT','varval',1,'p_types','TParser.py',1079),
  ('varval -> FLOAT','varval',1,'p_types','TParser.py',1080),
  ('varval -> STRING','varval',1,'p_types','TParser.py',1081),
  ('varval -> BOOLEAN','varval',1,'p_types','TParser.py',1082),
  ('class_variables -> class_variables class_variable','class_variables',2,'p_class_variables','TParser.py',1087),
  ('class_variables -> class_variable','class_variables',1,'p_class_variables','TParser.py',1088),
  ('class_variable -> PUBLIC ID EQ varval','class_variable',4,'p_class_variable','TParser.py',1098),
  ('class_variable -> PRIVATE ID EQ varval','class_variable',4,'p_class_variable','TParser.py',1099),
  ('class_fonctions -> class_fonctions class_fonction','class_fonctions',2,'p_class_funcs','TParser.py',1105),
  ('class_fonctions -> class_fonction','class_fonctions',1,'p_class_funcs','TParser.py',1106),
  ('class_fonctions_return_id -> class_fonctions_return_id class_fonction_return_id','class_fonctions_return_id',2,'p_class_funcs_return','TParser.py',1114),
  ('class_fonctions_return_id -> class_fonction_return_id','class_fonctions_return_id',1,'p_class_funcs_return','TParser.py',1115),
  ('class_fonction -> PUBLIC fonction','class_fonction',2,'p_class_func','TParser.py',1124),
  ('class_fonction -> PRIVATE fonction','class_fonction',2,'p_class_func','TParser.py',1125),
  ('class_fonction_return_id -> PUBLIC fonction_return_id','class_fonction_return_id',2,'p_class_func_return','TParser.py',1129),
  ('class_fonction_return_id -> PRIVATE fonction_return_id','class_fonction_return_id',2,'p_class_func_return','TParser.py',1130),
  ('statement -> CLASS ID LACCOL class_variables RACCOL','statement',5,'p_class','TParser.py',1135),
  ('statement -> CLASS ID EXTENDS ID LACCOL class_variables RACCOL','statement',7,'p_class','TParser.py',1136),
  ('statement -> CLASS ID LACCOL class_variables class_fonctions RACCOL','statement',6,'p_class','TParser.py',1137),
  ('statement -> CLASS ID EXTENDS ID LACCOL class_variables class_fonctions RACCOL','statement',8,'p_class','TParser.py',1138),
  ('statement -> CLASS ID LACCOL class_variables class_fonctions_return_id RACCOL','statement',6,'p_class','TParser.py',1139),
  ('statement -> CLASS ID EXTENDS ID LACCOL class_variables class_fonctions_return_id RACCOL','statement',8,'p_class','TParser.py',1140),
  ('statement -> ID LCROCHET ID RCROCHET','statement',4,'p_declare_object','TParser.py',1149),
  ('statement -> ID POINT ID','statement',3,'p_call_object_var','TParser.py',1157),
  ('empty -> <empty>','empty',0,'p_empty','TParser.py',1177),
]
